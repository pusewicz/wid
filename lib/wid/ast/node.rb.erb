# frozen_string_literal: true

# rbs_inline: enabled
#
# --- DO NOT EDIT THIS FILE ---
#
# This file was generated by `rake` from lib/wid/ast/node.rb.erb.
#
# Check the definition at lib/wid/ast/nodes.yml.

module Wid
  module AST
    class Node
      def to_h
        {type: type}
      end

      def type = :node
    end
    <%- nodes.each do |node| -%>

    class <%= node.class_name %> < Node
      <%- if node.fields.any? -%>
      <%- node.fields.each do |field| -%>
      attr_reader :<%= field.name %> #: <%= field.rbs_type %>
      <%- end -%>

      <%- node.fields.each do |field| -%>
      # @rbs <%= field.name %>: <%= field.rbs_type %>
      <%- end -%>
      # @rbs return: void
      def initialize(<%= (node.fields.map { _1.name + ":" }).join(", ") %>)
        <%- node.fields.each do |field| -%>
        @<%= field.name %> = <%= field.name %>
        <%- end -%>
      end

      <%- end -%>
      # @rbs visitor: Visitor
      # @rbs return: void
      def accept(visitor)
        visitor.visit_<%= node.name %>(self)
      end

      def type = :<%= node.name %> #: Symbol
      <%- if node.fields.any? -%>

      # @rbs return: Hash[Symbol, <%= node.fields.map { |v| v.respond_to?(:rbs_type) ? v.rbs_type : v.class.name }.uniq.join(" | ") %>]
      def to_h
        super.merge(<%= node.fields.map { |v| "#{v.name}: @#{v.name}#{v.emit_to_h}" }.join(", ") %>)
      end
      <%- end -%>
    end
    <%- end -%>
  end
end
